# SPDL - Obq_Thickness - Created by Marc-Antoine Desjardins - ObliqueFX - marcantoinedesjardins@gmail.com : Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
SPDL
Version = "2.0.0.0";
Reference = "{E116623D-C3E7-4544-A177-1BCF255BC97B}";
PropertySet "Obq_Thickness_pset" 
{
	Parameter "out" output
	{
		GUID = "{5A6E6040-30E4-4E06-BCE2-A9614F46E617}";
		Type = scalar;
	}
	Parameter "sampleLevel" input
	{
		GUID = "{3563437B-4DCA-43E3-964C-32D80878B795}";
		Type = integer;
		Texturable = off;
		Value = 1;
		Value Minimum = 1;
	}
	Parameter "coneAngle" input
	{
		GUID = "{5046A333-D2BF-4991-B2EB-969C753D25D8}";
		Type = scalar;
		Texturable = on;
		Value = 12.0;
		Value Minimum = 0.0;
		Value Maximum = 180.0;
	}
	Parameter "cosLobeGloss" input
	{
		GUID = "{141A9A5D-F245-490E-8FD0-15BDB4656ED9}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "useSampleCount" input
	{
		GUID = "{EFEF520F-AB43-443B-B3A4-02D58DC9A7B7}";
		Type = boolean;
		Value = Off;
		Texturable = On;
	}
	Parameter "sampleCount" input
	{
		GUID = "{E9E00CD0-3BA2-4006-9CD2-FCD9A7B9BFA7}";
		Type = scalar;
		Texturable = On;
		Value = 10.0;
		Value Minimum = 0.0;
	}
	Parameter "sampleCountMultiplier" input
	{
		GUID = "{C1F0FBB5-F44D-480D-A16B-461A1347C1CA}";
		Type = scalar;
		Texturable = On;
		Value = 1.0;
		Value Minimum = 0.0;
	}
	Parameter "backface" input
	{
		GUID = "{86EACD8E-6B5A-4D6D-ADB3-CCBF7BC387A4}";
		Type = string;
		Texturable = off;
		Value = "Always 1.0";
	}
	Parameter "intersectOthers" input
	{
		GUID = "{765DB581-15CD-4D55-ACA1-FEA02D3E7DDF}";
		Type = boolean;
		Texturable = on;
		Value = on;
	}
	Parameter "maxRayDepth" input
	{
		GUID = "{2B0501EC-87C4-4317-B98A-6EF4E540B4DA}";
		Type = integer;
		Texturable = on;
		Value = 0;
		Value Minimum = 0;
	}
	Parameter "normalizeMode" input
	{
		GUID = "{13799FA3-00FB-46C5-88EE-471CE058C51E}";
		Type = string;
		Texturable = off;
		Value = "Inverse normalize with max ray lenght";
	}
	Parameter "maxRayLength" input
	{
		GUID = "{4842EF88-0BA9-4D9A-B49C-5FBEE9C062B6}";
		Type = scalar;
		Texturable = on;
		Value = 10.0;
		Value Minimum = 0.0;
	}
	Parameter "usemaxRayLength" input
	{
		GUID = "{4BB3AF5C-C0A7-48D6-94A2-58A1C4256230}";
		Type = boolean;
		Texturable = on;
		Value = off;
	}
	Parameter "dirMode" input
	{
		GUID = "{6B774E1F-BE41-4992-B124-48DA2E704B8B}";
		Type = string;
		Texturable = off;
		Value = "View Direction";
	}
	Parameter "ior" input
	{
		GUID = "{E4B4D61F-563C-4B29-B1F7-50021C0393FF}";
		Type = scalar;
		Texturable = on;
		Value = 1.33;
		Value Minimum = 0;
	}
	Parameter "customDirection" input
	{
		GUID = "{4F4A8E16-4083-4A2D-AAA2-779FDB1CF97C}";
		Type = vector;
		Texturable = on;
		Value = 0.0 1.0 0.0;
	}
	Parameter "noHitMode" input
	{
		GUID = "{628D8538-2025-4FD9-8B32-E76E0AB237FC}";
		Type = string;
		Texturable = off;
		Value = "Infinitely thick";
	}
	Parameter "multNdotR" input
	{
		GUID = "{278FA560-1F65-4F08-9271-DE7C3776D8B0}";
		Type = boolean;
		Texturable = on;
		Value = off;
	}
	Parameter "NdotRExp" input
	{
		GUID = "{5543C1CA-D1F2-40E0-83E0-C39DED99AA71}";
		Type = scalar;
		Texturable = on;
		Value = 4.0;
		Value Minimum = 0.0;
	}
	Parameter "useVdotNForMaxAngle" input
	{
		GUID = "{7F43607A-1EC4-42CE-9FFF-492A28D0DCEB}";
		Type = boolean;
		Texturable = on;
		Value = off;
	}
	Parameter "enterSurface" input
	{
		GUID = "{77FDA091-3581-4531-8D0F-929296C7FEFE}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
	}
	Parameter "geometricLimitMultiplier" input
	{
		GUID = "{6CAC28B1-A81A-4119-9D74-F3F31964EAB8}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
	}
	Parameter "dirInverted" input
	{
		GUID = "{C56D77FB-BD05-4C54-9950-AFADAD78B2F5}";
		Type = boolean;
		Texturable = on;
		Value = off;
	}
	Parameter "dirSmooth" input
	{
		GUID = "{89AD9F41-1D97-4336-8385-54A15BC4C830}";
		Type = boolean;
		Texturable = on;
		Value = off;
	}
	Parameter "dirGeometric" input
	{
		GUID = "{29EAF29A-53F9-4E14-A109-239D4BBADE77}";
		Type = boolean;
		Texturable = on;
		Value = off;
	}
	Parameter "dirSafe" input
	{
		GUID = "{D9892100-144A-44F3-86BF-3BB003E0BC21}";
		Type = boolean;
		Texturable = on;
		Value = on;
	}
	Parameter "thicknessMode" input
	{
		GUID = "{C7424A36-9D70-4671-B4D6-B7C70229B8C4}";
		Type = string;
		Texturable = off;
		Value = "Thickness of this object";
	}
	Parameter "multiplyByDepth" input
	{
		GUID = "{8597813A-AAC3-40AF-8B8F-61E6E5A83A91}";
		Type = boolean;
		Texturable = on;
		Value = on;
	}
}


phenomenon "Obq_Thickness_declare"
{
	Name = "Obq_Thickness";
	Version = 1;
	Use = texture;
}

Defaults
{
	sampleLevel
	{
		Name = "Sample Level";
		UIRange = 1 To 10;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	coneAngle
	{
		Name = "Cone Angle";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	cosLobeGloss
	{
		Name = "Gloss";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	useSampleCount
	{
		Name = "Clamp Sample Count";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	sampleCount
	{
		Name = "Max Sample Count";
		UIRange = 1 To 10;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	sampleCountMultiplier
	{
		Name = "Max Sample Count Multiplier";
		UIRange = 1 To 256;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	backface
	{
		Name = "Backface is ";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Always 0.0" = "Always 0.0",
			"Always 1.0" = "Always 1.0",
			"Equal to Maximum Ray Length" = "Equal to Maximum Ray Length",
			"Considered normally" = "Considered normally"
		}
	}
	intersectOthers
	{
		Name = "Intersect Others";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	maxRayDepth
	{
		Name = "Maximum Ray Depth";
		UIRange = 0 To 20;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	normalizeMode
	{
		Name = "Normalize Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Don't normalize" = "Don't normalize",
			"Normalize with max ray lenght" = "Normalize with max ray lenght",
			"Inverse normalize with max ray lenght" = "Inverse normalize with max ray lenght"
		}
	}
	maxRayLength
	{
		Name = "Maximum Ray Length";
		UIRange = 0 To 2000;
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	usemaxRayLength
	{
		Name = "Use Max Ray Length";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	dirMode
	{
		Name = "Direction Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"View Direction" = "View Direction",
			"Surface Normal" = "Surface Normal",
			"Surface Normal (Face-Forward)" = "Surface Normal (Face-Forward)",
			"Reflection Direction" = "Reflection Direction",
			"Refraction Direction" = "Refraction Direction",
			"Custom Direction" = "Custom Direction",
		}
	}
	ior
	{
		Name = "IOR";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = 0 To 5;
	}
	customDirection
	{
		Name = "Custom Direction";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	noHitMode
	{
		Name = "No hit means surface is ";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Infinitely thin" = "Infinitely thin",
			"Infinitely thick" = "Infinitely thick",
		}
	}
	multNdotR
	{
		Name = "Multiply by NdotR";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	NdotRExp
	{
		Name = "Exponent";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = 0 To 8;
	}
	useVdotNForMaxAngle
	{
		Name = "Use geometric normal to limit cone angle";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	enterSurface
	{
		Name = "Enter surface by (0.0001 units)";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -100 to 100;
	}
	geometricLimitMultiplier
	{
		Name = "Multiply geometric limit by";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = 0 To 1;
	}
	dirInverted
	{
		Name = "Invert";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	dirSmooth
	{
		Name = "Smooth";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	dirGeometric
	{
		Name = "Geometric";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	dirSafe
	{
		Name = "Use safe directions";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	thicknessMode
	{
		Name = "Thickness Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Thickness of this object" = "Thickness of this object",
			"Count intersections" = "Count intersections",
			"Accumulate distances inside volumes" = "Accumulate distances inside volumes"
		}
	}
	multiplyByDepth
	{
		Name = "Consider thickness of intersecting volumes";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
}


Layout "Default"
{
	Tab "Main"
	{
		Group "Direction"
		{
			dirMode;
			ior;
			Group "Modifiers"
			{
				Row
				{
					dirInverted;
					dirSmooth;
					dirGeometric;
				}
			}
		}
		Group "Thickness" 
		{
			thicknessMode;
			Group "Options" 
			{
					multNdotR;
					NdotRExp;
					multiplyByDepth;
			}
		}
		Group "Options" 
		{
			backface;
			intersectOthers;
			noHitMode;
		}
		Group "Ray Settings"
		{
			maxRayDepth;
			maxRayLength;
			usemaxRayLength;
		}
		Group "Output Settings" 
		{
			normalizeMode;
		}
	}
	Tab "Blur"
	{
		Group "Samples"
		{
			sampleLevel;
			useSampleCount;
			sampleCount;
			sampleCountMultiplier;
			Group "Amount"
			{
				coneAngle;
				cosLobeGloss;
			}
		}
	}
	Tab "Advanced"
	{
		Group "Advanced Options"
		{
			dirSafe;
			enterSurface;
			useVdotNForMaxAngle;
			geometricLimitMultiplier;
		}
	}
	Tab "Custom Direction"
	{
		Group "Custom Direction"
		{
			customDirection;
		}
	}
}

Layout "RenderTree"
{
	Tab "Main"
	{
		Group "Direction"
		{
			dirMode;
			dirInverted;
			dirSmooth;
			dirGeometric;
			dirSafe;
			ior;
		}
		Group "Ray Settings"
		{
			sampleLevel;
			coneAngle;
			useVdotNForMaxAngle;
			cosLobeGloss;
			useSampleCount;
			sampleCount;
			sampleCountMultiplier;
		}
		Group "Advanced Ray Settings"
		{
			maxRayDepth;
			maxRayLength;
			usemaxRayLength;
		}
		Group "Count" 
		{
			thicknessMode;
			Group "Options" 
			{
				multNdotR;
				NdotRExp;
				multiplyByDepth;
			}
		}
		Group "Options" 
		{
			backface;
			intersectOthers;
			noHitMode;
			enterSurface;
			geometricLimitMultiplier;
		}
		Group "Output Settings" 
		{
			normalizeMode;
		}
	}
	Tab "Custom Direction"
	{
		Group "Custom Direction"
		{
			customDirection;
		}
	}
}


Plugin = Shader
{
	FileName = "Obq_Thickness";
}

Language = "VBScript";
Logic
{

sub sampleLevel_OnChanged()
	If PPG.sampleLevel.Value = 1 Then
		PPG.coneAngle.Enable(False)
		PPG.useVdotNForMaxAngle.Enable(False)
		PPG.cosLobeGloss.Enable(False)
		PPG.useSampleCount.Enable(False)
		PPG.sampleCount.Enable(False)
		PPG.sampleCountMultiplier.Enable(False)
	Else
		PPG.coneAngle.Enable(True)
		PPG.useVdotNForMaxAngle.Enable(True)
		PPG.cosLobeGloss.Enable(True)
		PPG.useSampleCount.Enable(True)
		PPG.sampleCount.Enable(True)
		PPG.sampleCountMultiplier.Enable(True)
		useSampleCount_OnChanged()
	End If
End sub

sub useSampleCount_OnChanged()
	If PPG.useSampleCount.Value = True Then
		PPG.sampleCount.Enable(True)
		PPG.sampleCountMultiplier.Enable(True)
	Else
		PPG.sampleCount.Enable(False)
		PPG.sampleCountMultiplier.Enable(False)
	End If
End sub

'dir modes
sub dirMode_OnChanged()
	If PPG.dirMode.Value = "Refraction Direction" Then
		PPG.ior.Show(True)
	Else
		PPG.ior.Show(False)
	End If
End sub

sub useVdotNForMaxAngle_OnChanged()
	If PPG.useVdotNForMaxAngle.Value = True Then
		PPG.geometricLimitMultiplier.ReadOnly = False
	Else
		PPG.geometricLimitMultiplier.ReadOnly = True
	End If
End sub

sub thicknessMode_OnChanged()
	If PPG.thicknessMode.Value = "Thickness of this object" Then
		PPG.multNdotR.ReadOnly = True
		PPG.NdotRExp.ReadOnly = True
		PPG.multiplyByDepth.ReadOnly = True
	ElseIf PPG.thicknessMode.Value = "Count intersections" Then
		PPG.multNdotR.ReadOnly = False
		PPG.NdotRExp.ReadOnly = False
		PPG.multiplyByDepth.ReadOnly = True
	Else
		PPG.multNdotR.ReadOnly = False
		PPG.NdotRExp.ReadOnly = False
		PPG.multiplyByDepth.ReadOnly = False
	End If		
End sub

sub OnInit()
	PPG.PPGLayout.SetAttribute "HelpFile","http://s3aws.obliquefx.com/public/shaders/help_files/Obq_Thickness.html"
	sampleLevel_OnChanged()
	useSampleCount_OnChanged()
	dirMode_OnChanged()
	useVdotNForMaxAngle_OnChanged()
	thicknessMode_OnChanged()
End sub

}

