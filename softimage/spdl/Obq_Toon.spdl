# SPDL Generated by Marc-Antoine Desjardins
SPDL
Version = "2.0.0.0";
Reference = "{3F714F0E-5AA2-45B7-BED8-4B295AC12FBE}";
PropertySet "Obq_Toon_pset"
{
	Parameter "out" output
	{
		GUID = "{F5003D4D-FA63-4D8B-9AC8-E3D0FAA2B2CE}";
		Type = color;
	}
	Parameter "global_loopLightMode" input
	{
		GUID = "{24198F12-0AD9-4999-8CA2-B403EF912C79}";
		Type = string;
		Texturable = off;
		Value = "Add";
	}
	Parameter "global_compMode" input
	{
		GUID = "{F68896F2-6557-4009-B41F-F8E73015EC9B}";
		Type = string;
		Texturable = off;
		Value = "Over";
	}
	Parameter "global_loopMode" input
	{
		GUID = "{55CC52C4-5BAC-474B-9844-0DF0DE367674}";
		Type = string;
		Texturable = off;
		Value = "Add all values";
	}
	Parameter "global_multByLightColor" input
	{
		GUID = "{99F1AF1E-7CF1-402B-B9A5-D109F2395CDB}";
		Type = boolean;
		Texturable = off;
		Value = on;
	}
#	Parameter "use_light_list" input
#	{
#		GUID = "{3E4D697F-EEB0-485F-AE64-4B6F1125F605}";
#		Type = boolean;
#		Texturable = on;
#		Value = off;
#	}
#	Parameter "light_list" input
#	{
#		title = "Lights";
#		guid = "{4A771FC8-3F84-45D7-9526-D90312310253}";
#		ui "control" = "LightListParamItem.LightListParamItem.1";
#		type = array
#		{
#			Parameter "light_list" input
#			{
#				title = "Light";
#				guid = "{0AD3ECBD-897B-4A2D-85FD-1B64903A3748}";
#				type = light;
#				Inspectable = on;
#				Texturable = off;
#				Persistable = on;
#				ui "control" = "LightListParamItem.LightListParamItem.1";
#			}
#s		};
#	}
	Parameter "ambient_color" input
	{
		GUID = "{61E6BE8C-DC67-4156-959D-BE06177EEFCB}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "ambient_scale" input
	{
		GUID = "{835E9D5A-055B-4BF8-9B51-693FE1AEACC2}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "ambient_multAmbience" input
	{
		GUID = "{46643AB0-26DC-4FEB-9411-D03AE3E33322}";
		Type = boolean;
		Texturable = off;
		Value = off;
	}
	Parameter "diffuse_color" input
	{
		GUID = "{3D8C05C1-8030-46D0-AE4C-BDB556CCA074}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
		flags=1;
	}
	Parameter "diffuse_scale" input
	{
		GUID = "{92BAB084-81F2-45BD-B449-91A7120670BD}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "diffuse_coverage" input
	{
		GUID = "{0730519D-241D-416D-9039-C1686474CDD7}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "diffuse_softness" input
	{
		GUID = "{D0B89026-8BF7-4870-8B39-E8B679F0B65B}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "diffuse_mode" input
	{
		GUID = "{CC19CE2A-A1B7-4A12-8C33-A521A35DE907}";
		Type = string;
		Texturable = off;
		Value = "Parameters";
	}
	Parameter "diffuse_gradient" input
	{
		GUID = "{C8C3F44E-20F6-4B79-A2AC-16F2AF5644B9}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "diffuse_image" input
	{
		GUID = "{B1013666-C5C0-48C6-9CBD-C1A297BAC52F}";
		Type = texture;
		flags  = 1;
		texturable = on;
	}
	Parameter "diffuse_imageType" input
	{
		GUID = "{ECEAD64B-4ABD-4BDC-B79C-0CA805E17944}";
		Type = string;
		Texturable = off;
		Value = "1D";
	}
	Parameter "highlight_color" input
	{
		GUID = "{7DCBFD1A-9B4C-40EC-80ED-2141DEC3774F}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "highlight_scale" input
	{
		GUID = "{0CF730B6-E603-4E4A-A6E3-755C56192D1A}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "highlight_exponent" input
	{
		GUID = "{7479B3A5-C902-4297-BB8D-269CFA987BCC}";
		Type = scalar;
		Texturable = on;
		Value = 50.0;
		Value Minimum = 0.0;
	}
	Parameter "highlight_coverage" input
	{
		GUID = "{249AC9A5-A5E1-4473-89D7-18FD938A66A9}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "highlight_softness" input
	{
		GUID = "{960D7E22-766E-4688-85D8-C55D7F09DBD2}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "highlight_mode" input
	{
		GUID = "{7D76291D-09E1-4921-B57D-CF2B36FBAAAA}";
		Type = string;
		Texturable = off;
		Value = "Parameters";
	}
	Parameter "highlight_gradient" input
	{
		GUID = "{D0F27037-F317-48A8-AC63-6DC65F85E046}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "highlight_image" input
	{
		GUID = "{5BEBDEEB-7955-425F-A750-5352C403EAA7}";
		Type = texture;
		flags  = 1;
		texturable = on;
	}
	Parameter "highlight_imageType" input
	{
		GUID = "{124B64F6-C4DD-44D0-A42A-949F1F1B9A4E}";
		Type = string;
		Texturable = off;
		Value = "1D";
	}
	Parameter "rimlight_color" input
	{
		GUID = "{B89B3EF5-D03C-4D99-B781-5A8E5DC05219}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "rimlight_scale" input
	{
		GUID = "{4715CB05-4B3C-434A-8192-06C2472452D2}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "rimlight_coverage" input
	{
		GUID = "{6E78284D-2788-49BD-AF0A-5216EA8EF50A}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum= 0.0;
		Value Maximum= 1.0;
	}
	Parameter "rimlight_softness" input
	{
		GUID = "{1ED14BD8-4E87-444D-A1C5-1179AA5EAFB2}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "rimlight_mode" input
	{
		GUID = "{72C7CDA9-1EB3-466F-B9C9-3E6AA717C58D}";
		Type = string;
		Texturable = off;
		Value = "Parameters";
	}
	Parameter "rimlight_gradient" input
	{
		GUID = "{7045A40E-F6D0-45AD-9B06-E5BCE8D2054A}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "rimlight_image" input
	{
		GUID = "{0FE80205-DEB4-4D1B-ACF5-ED91797B9E67}";
		Type = texture;
		flags  = 1;
		texturable = on;
	}
	Parameter "rimlight_imageType" input
	{
		GUID = "{B7D7B795-65B8-4963-A25A-1A982F8E1DC2}";
		Type = string;
		Texturable = off;
		Value = "1D";
	}
	Parameter "ambient_fb_str" input
	{
		GUID = "{3B8AFAA2-6933-4410-A2BC-76F06823A3CD}";
		Type = string;
		Texturable = off;
		Animatable = on;
		Value = "";
	}
	Parameter "diffuse_fb_str" input
	{
		GUID = "{7AC4EEC3-E127-46E0-B1CF-47B8ECA5CBB2}";
		Type = string;
		Texturable = off;
		Animatable = on;
		Value = "";
	}
	Parameter "highlight_fb_str" input
	{
		GUID = "{BAFA7FD9-EAD3-48E5-A5CE-4D11423F4529}";
		Type = string;
		Texturable = off;
		Animatable = on;
		Value = "";
	}
	Parameter "rimlight_fb_str" input
	{
		GUID = "{71C1BB58-592D-43CF-A40D-8287CC9B947D}";
		Type = string;
		Texturable = off;
		Animatable = on;
		Value = "";
	}
	Parameter "contour_fb_str" input
	{
		GUID = "{97F7C23E-81CF-43FE-9FB4-D18678CB5C94}";
		Type = string;
		Texturable = off;
		Animatable = on;
		Value = "";
	}
	Parameter "putAlphaInFb" input
	{
		GUID = "{8B82EB08-745D-4887-87DB-32668003EAD2}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = off;
	}
	Parameter "diffuse_autoRemap" input
	{
		GUID = "{9997AE7F-C6FE-4C4E-BD5C-798806665222}";
		Type = boolean;
		Texturable = off;
		Value = on;
	}
	Parameter "diffuse_imageRemapLeft" input
	{
		GUID = "{395DC321-D0DD-4CE0-A0CB-FF8A7C25C50A}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
	}
	Parameter "diffuse_imageRemapRight" input
	{
		GUID = "{2C79E369-18E8-4A20-A554-96BAB6CEB6D7}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
	}
	Parameter "highlight_autoRemap" input
	{
		GUID = "{CDDBAB35-F55F-4ED2-9F06-459A7BCF62F8}";
		Type = boolean;
		Texturable = off;
		Value = on;
	}
	Parameter "highlight_imageRemapLeft" input
	{
		GUID = "{47C4E858-A138-4A8C-B12F-163AD5310B5F}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
	}
	Parameter "highlight_imageRemapRight" input
	{
		GUID = "{4C27F1C5-6D32-4E9B-BCCF-226BB6ED868F}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
	}
	Parameter "rimlight_autoRemap" input
	{
		GUID = "{9362C24A-F0F3-4200-B3B1-4BF9BAD943B9}";
		Type = boolean;
		Texturable = off;
		Value = on;
	}
	Parameter "rimlight_imageRemapLeft" input
	{
		GUID = "{48B4D016-3220-44A8-8471-B8AC85D2C2B4}";
		Type = scalar;
		Texturable = on;
		Value = 0.0;
	}
	Parameter "rimlight_imageRemapRight" input
	{
		GUID = "{05647EBA-E672-4613-9B45-BB7D9EDFB723}";
		Type = scalar;
		Texturable = on;
		Value = 1.0;
	}
	Parameter "diffuse_imageRemapBias" input
	{
		GUID = "{D074C24D-26A3-4458-946B-F51A62EF5585}";
		Type = scalar;
		Texturable = on;
		Value = 0.5;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "diffuse_imageRemapGain" input
	{
		GUID = "{EAA2D350-5263-4EB0-A9F2-2E49EB4C4C7C}";
		Type = scalar;
		Texturable = on;
		Value = 0.5;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "highlight_imageRemapBias" input
	{
		GUID = "{80B1301A-BE76-49D2-A98B-283C1C7708BD}";
		Type = scalar;
		Texturable = on;
		Value = 0.5;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "highlight_imageRemapGain" input
	{
		GUID = "{128FDA1F-92B0-4FD1-A2BF-1A4D887443FC}";
		Type = scalar;
		Texturable = on;
		Value = 0.5;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "rimlight_imageRemapBias" input
	{
		GUID = "{DAC573CE-72E8-4694-95D1-4B3C20D85A40}";
		Type = scalar;
		Texturable = on;
		Value = 0.5;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "rimlight_imageRemapGain" input
	{
		GUID = "{F68FA93D-A4E6-49DC-929A-8CE2EF36558E}";
		Type = scalar;
		Texturable = on;
		Value = 0.5;
		Value Minimum = 0.0;
		Value Maximum = 1.0;
	}
	Parameter "output_imageOnUV" input
	{
		GUID = "{A496F7D5-F697-4F53-A753-6CA12722A5B3}";
		Type = boolean;
		Texturable = off;
		Value = off;
	}
	Parameter "opacity" input
	{
		GUID = "{84D1C236-0DCD-4592-97A9-43B44DA22CA3}";
		Type = color;
		Texturable = on;
		Value = 1.0 1.0 1.0;
	}
	Parameter "normalizeObjectID" input
	{
		GUID = "{8D908FD4-875F-4578-BD47-1661767A046C}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = on;
	}
	Parameter "AOVprefix" input
	{
		GUID = "{14E26646-1D77-4E60-A513-D90769F5619A}";
		Type = string;
		Texturable = off;
		Animatable = off;
		Value = "ot";
	}
	Parameter "ambient_noInternal" input
	{
		GUID = "{1711856B-FB0C-457A-84A7-546D9A57357F}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = on;
	}
	Parameter "diffuse_noInternal" input
	{
		GUID = "{97742A4E-EE71-4F3B-9EEB-C94690031EA7}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = on;
	}
	Parameter "highlight_noInternal" input
	{
		GUID = "{A1AA2C6D-EE92-42B0-AA1E-489811C139D1}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = on;
	}
	Parameter "rimlight_noInternal" input
	{
		GUID = "{ED548836-392D-49E3-A358-7621D6599510}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = on;
	}
	Parameter "diffuse_linearDot" input
	{
		GUID = "{BF34DD86-28D7-45C7-93D4-9B6E775E3388}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = off;
	}
	Parameter "highlight_linearDot" input
	{
		GUID = "{7D29FD28-15C1-4B31-BC58-37AC2E46F21A}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = off;
	}
	Parameter "rimlight_linearDot" input
	{
		GUID = "{6955244D-5491-4070-9771-C302436894DB}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = off;
	}
	Parameter "diffuse_shaderInput" input
	{
		GUID = "{863ABA7D-1596-4B09-9050-8712DE5A244C}";
		Type = color;
		Texturable = on;
		Animatable = on;
		Value = 0.0 0.0 0.0;
	}
	Parameter "highlight_shaderInput" input
	{
		GUID = "{554F68CC-0A3A-45B9-80A8-A5AD1A78369D}";
		Type = color;
		Texturable = on;
		Animatable = on;
		Value = 0.0 0.0 0.0;
	}
	Parameter "global_remapMode" input
	{
		GUID = "{2D756DB1-A2EA-4535-BCD5-34A0FA11A672}";
		Type = string;
		Texturable = off;
		Animatable = on;
		Value = "Use Each Channel";
	}
	Parameter "global_remapMultByColor" input
	{
		GUID = "{216C73C0-7556-4274-B229-912380DDBCFD}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = off;
	}
	Parameter "global_clamp" input
	{
		GUID = "{3FC3E399-16E0-4E9C-8630-EF20F11A058E}";
		Type = boolean;
		Texturable = off;
		Animatable = on;
		Value = on;
	}
}

MetaShader "Obq_Toon_params_meta"
{
	Name = "Obq_Toon";
	Type = Material;
	
	Renderer "Arnold Render"
	{
		Name = "Obq_Toon";
	}	
}


Defaults
{
	global_loopLightMode
	{
		Name = "Lights";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Add" = "Add",
			"Add (Clamped)" = "Add (Clamped)",
			"Maximum" = "Maximum",
			"Multiply" = "Multiply"
		}
	}
	global_compMode
	{
		Name = "Compositing";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Add" = "Add",
			"Over" = "Over",
			"Max" = "Max",
			"Screen" = "Screen"
			
		}
	}
	global_loopMode
	{
		Name = "Loop Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Add all values" = "Add all values",
			"Use sum for value" = "Use sum for value",
			"Use max for value" = "Use max for value",
			"Remap value" = "Remap value",
			"Remap inputs" = "Remap inputs"
		}
	}
	global_multByLightColor
	{
		Name = "Multiply by Light Color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
#	use_light_list
#	{
#		Name = "Use Light List";
#		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
#	}
#	light_list
#	{
#		Name = "Light list";
#		UIType = "LightListParamItem.LightListParamItem.1";
#	}
	ambient_color
	{
		Name = "Color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	ambient_scale
	{
		Name = "Scale";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	ambient_multAmbience
	{
		Name = "Multiply by scene ambience";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_color
	{
		Name = "Color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	diffuse_scale
	{
		Name = "Scale";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_coverage
	{
		Name = "Coverage";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_softness
	{
		Name = "Softness";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_mode
	{
		Name = "Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Parameters" = "Parameters",
			"Image" = "Image",
			"Gradient" = "Gradient"
		}
	}
	diffuse_gradient
	{
		Name = "Gradient";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	diffuse_image
	{
		Name = "Image Gradient";
		Description = "Image";
		UIType = "ImageBrowserItem.ImageBrowserItem.1";
	}
	diffuse_imageType
	{
		Name = "Image Type";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"1D" = "1D",
			"2D" = "2D"
		}
	}
	highlight_color
	{
		Name = "Color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	highlight_scale
	{
		Name = "Scale";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_exponent
	{
		Name = "Exponent";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = 0.0 to 500;
	}
	highlight_coverage
	{
		Name = "Coverage";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_softness
	{
		Name = "Softness";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_mode
	{
		Name = "Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Parameters" = "Parameters",
			"Image" = "Image",
			"Gradient" = "Gradient"
		}
	}
	highlight_gradient
	{
		Name = "Gradient";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	highlight_image
	{
		Name = "Image Gradient";
		Description = "Image";
		UIType = "ImageBrowserItem.ImageBrowserItem.1";
	}
	highlight_imageType
	{
		Name = "Image Type";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"1D" = "1D",
			"2D" = "2D"
		}
	}
	rimlight_color
	{
		Name = "Color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	rimlight_scale
	{
		Name = "Scale";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_coverage
	{
		Name = "Coverage";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_softness
	{
		Name = "Softness";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_mode
	{
		Name = "Mode";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Parameters" = "Parameters",
			"Image" = "Image",
			"Gradient" = "Gradient"
		}
	}
	rimlight_gradient
	{
		Name = "Gradient";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	rimlight_image
	{
		Name = "Image Gradient";
		Description = "Image";
		UIType = "ImageBrowserItem.ImageBrowserItem.1";
	}
	rimlight_imageType
	{
		Name = "Image Type";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"1D" = "1D",
			"2D" = "2D"
		}
	}
	ambient_fb_str
	{
		Name = "Ambient";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "combo";
	}
	diffuse_fb_str
	{
		Name = "Diffuse";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "combo";
	}
	highlight_fb_str
	{
		Name = "Highlight";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "combo";
	}
	rimlight_fb_str
	{
		Name = "Rimlight";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "combo";
	}
	contour_fb_str
	{
		Name = "Contour";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "combo";
	}
	putAlphaInFb
	{
		Name = "Set Alpha to Over Alpha";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_autoRemap
	{
		Name = "Use Auto Remap";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_imageRemapLeft
	{
		Name = "Left Value";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -2.0 to 2.0;
	}
	diffuse_imageRemapRight
	{
		Name = "Right Value";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -2.0 to 2.0;
	}
	highlight_autoRemap
	{
		Name = "Use Auto Remap";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_imageRemapLeft
	{
		Name = "Left Value";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -2.0 to 2.0;
	}
	highlight_imageRemapRight
	{
		Name = "Right Value";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -2.0 to 2.0;
	}
	rimlight_autoRemap
	{
		Name = "Use Auto Remap";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_imageRemapLeft
	{
		Name = "Left Value";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -2.0 to 2.0;
	}
	rimlight_imageRemapRight
	{
		Name = "Right Value";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIRange = -2.0 to 2.0;
	}
	diffuse_imageRemapBias
	{
		Name = "Bias";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_imageRemapGain
	{
		Name = "Gain";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_imageRemapBias
	{
		Name = "Bias";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_imageRemapGain
	{
		Name = "Gain";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_imageRemapBias
	{
		Name = "Bias";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_imageRemapGain
	{
		Name = "Gain";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	output_imageOnUV
	{
		Name = "Check To Render Map Image (Use diffuse tab)";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	opacity
	{
		Name = "Color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	normalizeObjectID
	{
		Name = "Normalize Object ID in Contour";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	AOVprefix
	{
		Name = "with prefix";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	ambient_noInternal
	{
		Name = "No Internal Ambient";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_noInternal
	{
		Name = "No Internal Diffuse";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_noInternal
	{
		Name = "No Internal Highlight";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_noInternal
	{
		Name = "No Internal Rimlight";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_linearDot
	{
		Name = "Linearize Dot Product";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	highlight_linearDot
	{
		Name = "Linearize Dot Product";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	rimlight_linearDot
	{
		Name = "Linearize Dot Product";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	diffuse_shaderInput
	{
		Name = "Shader Input Port";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	highlight_shaderInput
	{
		Name = "Shader Input Port";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "rgb";
	}
	global_remapMode
	{
		Name = "Remap";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
		UIType = "Combo";
		Items
		{
			"Use Average" = "Use Average",
			"Use Luminance" = "Use Luminance",
			"Use Each Channel" = "Use Each Channel"
		}
	}
	global_remapMultByColor
	{
		Name = "Multiply by normalized input color";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
	global_clamp
	{
		Name = "Clamp Before Compositing";
		Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
	}
}

Layout "Default"
{
	Tab "Globals"
	{
		Group "Ambient"
		{
			ambient_color;
			ambient_scale;
			ambient_multAmbience;
			ambient_noInternal;	
		}
		Group "Opacity"
		{
			opacity;
		}
		Group "Options"
		{
			global_compMode;
			global_loopMode;
			global_loopLightMode;
			global_remapMode;
			global_remapMultByColor;
			global_multByLightColor;
			global_clamp;
			#use_light_list;
			#light_list;
		}
		Group "Special Output"
		{
			output_imageOnUV;
		}
	}
	Tab "Diffuse"
	{
		diffuse_color;
		diffuse_scale;
		diffuse_coverage;
		diffuse_softness;
		diffuse_noInternal;
		diffuse_linearDot;
		diffuse_mode;
		#diffuse_gradient;
		diffuse_image;
		#diffuse_shaderInput;
		#diffuse_imageType;
		Group "Image Remap"
		{
			diffuse_autoRemap;
			Row
			{
				diffuse_imageRemapLeft;
				diffuse_imageRemapRight;
			}
			Row
			{
				diffuse_imageRemapBias;
				diffuse_imageRemapGain;
			}
		}
	}
	Tab "Highlight"
	{
		highlight_color;
		highlight_scale;
		highlight_exponent;
		highlight_coverage;
		highlight_softness;
		highlight_noInternal;
		highlight_linearDot;
		highlight_mode;
		#highlight_gradient;
		highlight_image;
		#highlight_shaderInput;
		#highlight_imageType;
		Group "Image Remap"
		{
			highlight_autoRemap;
			Row
			{
				highlight_imageRemapLeft;
				highlight_imageRemapRight;
			}
			Row
			{
				highlight_imageRemapBias;
				highlight_imageRemapGain;
			}
		}
	}
	Tab "Rimlight"
	{
		rimlight_color;
		rimlight_scale;
		rimlight_coverage;
		rimlight_softness;
		rimlight_noInternal;
		rimlight_linearDot;
		rimlight_mode;
		#rimlight_gradient;
		rimlight_image;
		#rimlight_imageType;
		Group "Image Remap"
		{
			rimlight_autoRemap;
			Row
			{
				rimlight_imageRemapLeft;
				rimlight_imageRemapRight;
			}
			Row
			{
				rimlight_imageRemapBias;
				rimlight_imageRemapGain;
			}
		}
	}
	Tab "AOVs"
	{
		Row
		{
			Button createSetAOVs,alignleft = "Create/Set default AOVs";
			AOVprefix;
		}
		Group "AOVs"
		{
			Row 
			{
			ambient_fb_str;
			Button AddAmbientChannel,alignright = "Add...";
			}
			Row 
			{
			diffuse_fb_str;
			Button AddDiffuseChannel,alignright = "Add...";
			}
			Row 
			{
			highlight_fb_str;
			Button AddHighlightChannel,alignright = "Add...";
			}
			Row 
			{
			rimlight_fb_str;
			Button AddRimlightChannel,alignright = "Add...";
			}
			Row 
			{
			contour_fb_str;
			Button AddContourChannel,alignright = "Add...";
			}
		}
		Group "Options"
		{
			putAlphaInFb;
			normalizeObjectID;
		}
	}
}

Layout "RenderTree"
{
	Group "Ambient"
	{
		ambient_color;
		ambient_scale;
		ambient_multAmbience;	
	}
	Group "Diffuse"
	{
		diffuse_color;
		diffuse_scale;
		diffuse_coverage;
		diffuse_softness;
		diffuse_gradient;
		diffuse_image;
		diffuse_shaderInput;
		#diffuse_imageType;
		diffuse_imageRemapBias;
		diffuse_imageRemapGain;
		diffuse_imageRemapLeft;
		diffuse_imageRemapRight;
	}
	Group "Highlight"
	{
		highlight_color;
		highlight_scale;
		highlight_exponent;
		highlight_coverage;
		highlight_softness;
		highlight_gradient;
		highlight_image;
		highlight_shaderInput;
		#highlight_imageType;
		highlight_imageRemapBias;
		highlight_imageRemapGain;
		highlight_imageRemapLeft;
		highlight_imageRemapRight;
	}
	Group "Rimlight"
	{
		rimlight_color;
		rimlight_scale;
		rimlight_coverage;
		rimlight_softness;
		rimlight_gradient;
		rimlight_image;
		#rimlight_imageType;
		rimlight_imageRemapBias;
		rimlight_imageRemapGain;
		rimlight_imageRemapLeft;
		rimlight_imageRemapRight;
	}
	Group "Globals"
	{
		#use_light_list;
		opacity;
	}
}
	
Language = "VBScript";
Logic
{

Function AddChannel( in_type, in_param )
	Dim		sName

	AddChannel = False

	sName = InputBox( XSIUtils.Translate( "Render Channel Name", "XSISPDLFILE" ) )
	If sName = "" Then Exit Function

	On Error Resume Next
	sName = CreateRenderChannel( sName, in_type )
	If Err.Number <> 0 Then
		LogMessage "Unable to create channel. Does a channel with that name already exist?"
		Exit Function
	End If
	If sName <> "" Then
		For Each oInspected In PPG.Inspected
			oInspected.Parameters( in_param ).Value = sName
		Next
		AddChannel = True
	End If
End Function

Function AddChannelSilent( in_type, in_param, in_name )
	Dim		sName

	AddChannelSilent = False

	sName = in_name

	On Error Resume Next
	sName = CreateRenderChannel( sName, in_type )
	If Err.Number <> 0 Then
		LogMessage "Unable to create channel. Does a channel with that name already exist?"
		Exit Function
	End If
	If sName <> "" Then
		For Each oInspected In PPG.Inspected
			oInspected.Parameters( in_param ).Value = sName
		Next
		AddChannelSilent = True
	End If
End Function

Function renderChannelExists( in_type, in_param, in_name )
	Dim oRenderChannels
	Set oRenderChannels = ActiveProject.ActiveScene.PassContainer.Properties( "Scene Render Options" ).RenderChannels

	renderChannelExists = False
	for each oChannel in oRenderChannels
		If oChannel.Name = in_name Then
			renderChannelExists = True
			Exit Function
		End If
	next 
End Function

Sub FillChannelCombo( in_type, in_param )
	Dim oRenderChannels
	Set oRenderChannels = ActiveProject.ActiveScene.PassContainer.Properties( "Scene Render Options" ).RenderChannels
		
	Dim		idx
	ReDim oChannelList( oRenderChannels.Count * 2 + 3 )
		
	oChannelList( 0 ) = "<None>"
	oChannelList( 1 ) = ""

	idx = 1
	for each oChannel in oRenderChannels
		If oChannel.ChannelType = in_type Then
			oChannelList( idx * 2 + 0 ) = oChannel.Name
			oChannelList( idx * 2 + 1 ) = oChannel.Name
			idx = idx + 1
		End If
	next 
		
	ReDim Preserve oChannelList( idx * 2 - 1 )

	Dim oChannelCombo
	Set oChannelCombo = PPG.PPGLayout.Item( in_param )
	oChannelCombo.UIItems = oChannelList
End Sub


Sub createSetAOVs_OnClicked
	If Not( renderChannelExists(siRenderChannelColorType, "ambient_fb_str", PPG.AOVprefix.Value & "Ambient") ) Then
		AddChannelSilent siRenderChannelColorType, "ambient_fb_str", PPG.AOVprefix.Value & "Ambient"
	Else
		PPG.ambient_fb_str.Value = PPG.AOVprefix.Value & "Ambient"
	End If
	
	If Not( renderChannelExists(siRenderChannelColorType, "diffuse_fb_str", PPG.AOVprefix.Value & "Diffuse") ) Then
		AddChannelSilent siRenderChannelColorType, "diffuse_fb_str", PPG.AOVprefix.Value & "Diffuse" 
	Else
		PPG.diffuse_fb_str.Value = PPG.AOVprefix.Value & "Diffuse"
	End If
	
	If Not( renderChannelExists(siRenderChannelColorType, "highlight_fb_str", PPG.AOVprefix.Value & "Highlight") ) Then
		AddChannelSilent siRenderChannelColorType, "highlight_fb_str", PPG.AOVprefix.Value & "Highlight"
	Else
		PPG.highlight_fb_str.Value = PPG.AOVprefix.Value & "Highlight"
	End If
	
	If Not( renderChannelExists(siRenderChannelColorType, "rimlight_fb_str", PPG.AOVprefix.Value & "Rimlight") ) Then
		AddChannelSilent siRenderChannelColorType, "rimlight_fb_str", PPG.AOVprefix.Value & "Rimlight" 
	Else
		PPG.rimlight_fb_str.Value = PPG.AOVprefix.Value & "Rimlight"
	End If
	
	If Not( renderChannelExists(siRenderChannelColorType, "contour_fb_str", PPG.AOVprefix.Value & "Contour") ) Then
		AddChannelSilent siRenderChannelColorType, "contour_fb_str", PPG.AOVprefix.Value & "Contour" 
	Else
		PPG.contour_fb_str.Value = PPG.AOVprefix.Value & "Contour"
	End If
	
	FillChannelCombo siRenderChannelColorType, "ambient_fb_str"
	FillChannelCombo siRenderChannelColorType, "diffuse_fb_str"
	FillChannelCombo siRenderChannelColorType, "highlight_fb_str"
	FillChannelCombo siRenderChannelColorType, "rimlight_fb_str"
	FillChannelCombo siRenderChannelColorType, "contour_fb_str"
	PPG.Refresh
End Sub

Sub AddAmbientChannel_OnClicked
	If AddChannel( siRenderChannelColorType, "ambient_fb_str" ) Then
		FillChannelCombo siRenderChannelColorType, "ambient_fb_str"
		PPG.Refresh
	End If
End Sub

Sub AddDiffuseChannel_OnClicked
	If AddChannel( siRenderChannelColorType, "diffuse_fb_str" ) Then
		FillChannelCombo siRenderChannelColorType, "diffuse_fb_str"
		PPG.Refresh
	End If
End Sub

Sub AddHighlightChannel_OnClicked
	If AddChannel( siRenderChannelColorType, "highlight_fb_str" ) Then
		FillChannelCombo siRenderChannelColorType, "highlight_fb_str"
		PPG.Refresh
	End If
End Sub

Sub AddRimlightChannel_OnClicked
	If AddChannel( siRenderChannelColorType, "rimlight_fb_str" ) Then
		FillChannelCombo siRenderChannelColorType, "rimlight_fb_str"
		PPG.Refresh
	End If
End Sub

Sub AddContourChannel_OnClicked
	If AddChannel( siRenderChannelColorType, "contour_fb_str" ) Then
		FillChannelCombo siRenderChannelColorType, "contour_fb_str"
		PPG.Refresh
	End If
End Sub


Sub rimlight_mode_OnChanged()
	If PPG.rimlight_mode.Value = "Image" Then
		PPG.rimlight_image.Show(True)
		PPG.rimlight_autoRemap.Show(True)
		PPG.rimlight_imageRemapLeft.Show(True)
		PPG.rimlight_imageRemapRight.Show(True)
		PPG.rimlight_imageRemapBias.Show(True)
		PPG.rimlight_imageRemapGain.Show(True)
	Else
		PPG.rimlight_image.Show(False)
		PPG.rimlight_autoRemap.Show(False)
		PPG.rimlight_imageRemapLeft.Show(False)
		PPG.rimlight_imageRemapRight.Show(False)
		PPG.rimlight_imageRemapBias.Show(False)
		PPG.rimlight_imageRemapGain.Show(False)

	End If
	PPG.Refresh
End Sub

Sub highlight_mode_OnChanged()
	If PPG.highlight_mode.Value = "Image" Then
		PPG.highlight_image.Show(True)
		PPG.highlight_autoRemap.Show(True)
		PPG.highlight_imageRemapLeft.Show(True)
		PPG.highlight_imageRemapRight.Show(True)
		PPG.highlight_imageRemapBias.Show(True)
		PPG.highlight_imageRemapGain.Show(True)
	Else
		PPG.highlight_image.Show(False)
		PPG.highlight_autoRemap.Show(False)
		PPG.highlight_imageRemapLeft.Show(False)
		PPG.highlight_imageRemapRight.Show(False)
		PPG.highlight_imageRemapBias.Show(False)
		PPG.highlight_imageRemapGain.Show(False)
	End If
	PPG.Refresh
End Sub

Sub diffuse_mode_OnChanged()
	If PPG.diffuse_mode.Value = "Image" Then
		PPG.diffuse_image.Show(True)
		PPG.diffuse_autoRemap.Show(True)
		PPG.diffuse_imageRemapLeft.Show(True)
		PPG.diffuse_imageRemapRight.Show(True)
		PPG.diffuse_imageRemapBias.Show(True)
		PPG.diffuse_imageRemapGain.Show(True)		
	Else
		PPG.diffuse_image.Show(False)
		PPG.diffuse_autoRemap.Show(False)
		PPG.diffuse_imageRemapLeft.Show(False)
		PPG.diffuse_imageRemapRight.Show(False)
		PPG.diffuse_imageRemapBias.Show(False)
		PPG.diffuse_imageRemapGain.Show(False)
	End If
	PPG.Refresh
End Sub

Sub diffuse_autoRemap_OnChanged()
	If PPG.diffuse_autoRemap.Value Then
		PPG.diffuse_imageRemapLeft.ReadOnly = True
		PPG.diffuse_imageRemapRight.ReadOnly = True
	Else
		PPG.diffuse_imageRemapLeft.ReadOnly = False
		PPG.diffuse_imageRemapRight.ReadOnly = False
	End If
	PPG.Refresh
End Sub

Sub highlight_autoRemap_OnChanged()
	If PPG.highlight_autoRemap.Value Then
		PPG.highlight_imageRemapLeft.ReadOnly = True
		PPG.highlight_imageRemapRight.ReadOnly = True
	Else
		PPG.highlight_imageRemapLeft.ReadOnly = False
		PPG.highlight_imageRemapRight.ReadOnly = False
	End If
End Sub

Sub rimlight_autoRemap_OnChanged()
	If PPG.rimlight_autoRemap.Value Then
		PPG.rimlight_imageRemapLeft.ReadOnly = True
		PPG.rimlight_imageRemapRight.ReadOnly = True
	Else
		PPG.rimlight_imageRemapLeft.ReadOnly = False
		PPG.rimlight_imageRemapRight.ReadOnly = False
	End If
End Sub

Sub global_remapMode_OnChanged()
	If PPG.global_loopMode.Value = "Remap value" Or PPG.global_loopMode.Value = "Remap inputs" Then
		PPG.global_remapMode.Show(True)
		If PPG.global_remapMode.Value = "Use Each Channel" Then
			PPG.global_remapMultByColor.Show(False)
		Else
			PPG.global_remapMultByColor.Show(True)
		End If
	Else
		PPG.global_remapMode.Show(False)
		PPG.global_remapMultByColor.Show(False)
	End If
	PPG.Refresh
End Sub

Sub global_loopMode_OnChanged()
	If PPG.global_loopMode.Value = "Use sum for value" Or PPG.global_loopMode.Value = "Use max for value" Then
		PPG.global_loopLightMode.Show(True)
	Else
		PPG.global_loopLightMode.Show(False)
	End If

	global_remapMode_OnChanged()
	
	If PPG.global_loopMode.Value = "Remap inputs" Then
		PPG.global_multByLightColor.Show(False)
	Else
		PPG.global_multByLightColor.Show(True)
	End If
End Sub

Sub OnInit
	PPG.PPGLayout.SetAttribute "HelpFile","http://s3aws.obliquefx.com/public/shaders/help_files/Obq_Toon.html"
	FillChannelCombo siRenderChannelColorType, "ambient_fb_str" 
	FillChannelCombo siRenderChannelColorType, "diffuse_fb_str" 
	FillChannelCombo siRenderChannelColorType, "highlight_fb_str"
	FillChannelCombo siRenderChannelColorType, "rimlight_fb_str" 
	FillChannelCombo siRenderChannelColorType, "contour_fb_str"
	diffuse_mode_OnChanged()
	highlight_mode_OnChanged()
	rimlight_mode_OnChanged()
	global_loopMode_OnChanged()
	diffuse_autoRemap_OnChanged()
	highlight_autoRemap_OnChanged()
	rimlight_autoRemap_OnChanged()
End Sub
}
